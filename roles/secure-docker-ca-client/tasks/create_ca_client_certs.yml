---
- name: Check pki path exists
  file:
    path: "{{ pki_path }}"
    state: directory

- name: Generate ca key
  command: "openssl genrsa -out {{ pki_path }}/ca-key.pem 4096"
  args:
    creates: "{{ pki_path }}/ca-key.pem"

- name: Generate ca certificate
  command: "openssl req -x509 -new -nodes -key {{ pki_path }}/ca-key.pem -days 10000
                        -out {{ pki_path }}/ca.pem -subj '/CN=Docker CA'"
  args:
    creates: "{{ pki_path }}/ca.pem"

- name: Copy client.cnf
  copy:
    src: client.cnf
    dest: "{{ pki_path }}/client.cnf"

- name: Generate client key
  command: "openssl genrsa -out {{ pki_path }}/client-key.pem 2048"
  args:
    creates: "{{ pki_path }}/client-key.pem"

- name: Generate client csr
  command: "openssl req -new -key {{ pki_path }}/client-key.pem -out {{ pki_path }}/client-cert.csr
                        -subj '/CN=docker-client' -config {{ pki_path }}/client.cnf"
  args:
    creates: "{{ pki_path }}/client-cert.csr"

- name: Generate client certificate
  command: "openssl x509 -req -in {{ pki_path }}/client-cert.csr -out {{ pki_path }}/client-cert.pem
                         -CA {{ pki_path }}/ca.pem -CAkey {{ pki_path }}/ca-key.pem -CAcreateserial
                         -days 365 -extensions v3_req -extfile {{ pki_path }}/client.cnf"
  args:
    creates: "{{ pki_path }}/client-cert.pem"

- name: Check that the client cert path exists
  file:
    path: "{{ docker_client_certs_path }}"
    state: directory
    mode: 0700

- name: Copy client certs
  with_items:
    - f: "{{ pki_path }}/ca.pem"
      t: ca.pem
    - f: "{{ pki_path }}/client-cert.pem"
      t: cert.pem
    - f: "{{ pki_path }}/client-key.pem"
      t: key.pem
      m: "0400"
  copy:
    src: "{{ item.f }}"
    dest: "{{ docker_client_certs_path }}/{{ item.t }}"
    mode: "{{ item.m | default('0600') }}"
    remote_src: yes